version: '3.8'

services:

  # Gateway
  wells-gateway:
    container_name: wells-gateway
    image: fosales/wells-store-wells-gateway:latest
    env_file:
      - ../docker/env/.env-wells-gateway
    ports:
      - "8080:8125"
    depends_on:
      consul-wells-store:
        condition: service_healthy
    networks:
      - consul-wells-store-net
      - wells-store-app-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M

  # Servico de Pagamento
  wells-pagamento:
    container_name: wells-pagamento
    image: fosales/wells-store-wells-pagamento:latest
    env_file:
      - ../docker/env/.env-wells-pagamento
    depends_on:
      wells-pagamento-db:
        condition: service_healthy
      consul-wells-store:
        condition: service_healthy
    networks:
      - wells-pagamento-db-net
      - consul-wells-store-net
      - wells-store-rabbitmq-net
      - wells-store-app-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
  wells-pagamento-db:
    container_name: wells-pagamento-db
    image: postgres:latest
    env_file:
      - ../docker/env/.env-wells-pagamento-db
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    networks:
      - wells-pagamento-db-net
    volumes:
      - wells-pagamento-db-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 64M

  # Servico de Usu√°rio
  wells-usuario:
    container_name: wells-usuario
    image: fosales/wells-store-wells-usuario:latest
    env_file:
      - ../docker/env/.env-wells-usuario
    depends_on:
      wells-usuario-db:
        condition: service_healthy
      consul-wells-store:
        condition: service_healthy
    networks:
      - wells-usuario-db-net
      - consul-wells-store-net
      - wells-store-app-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
  wells-usuario-db:
    container_name: wells-usuario-db
    image: postgres:latest
    env_file:
      - ../docker/env/.env-wells-usuario-db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    networks:
      - wells-usuario-db-net
    volumes:
      - wells-usuario-db-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 64M

  # Carrinho
  wells-carrinho:
    container_name: wells-carrinho
    image: fosales/wells-store-wells-carrinho:latest
    env_file:
      - ../docker/env/.env-wells-carrinho
    ports:
      - "8080:8125"
    depends_on:
      consul-wells-store:
        condition: service_healthy
    networks:
      - consul-wells-store-net
      - wells-store-app-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M

  # Consul
  consul-wells-store:
    image: consul:1.15.4
    container_name: consul-wells-store
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600/udp"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - "CONSUL_LOCAL_CONFIG={\"skip_leave_on_interrupt\": true}"
    command: "agent  -server -ui -client=0.0.0.0  -bootstrap-expect=1 "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - consul-wells-store-net
      - wells-store-app-net
    volumes:
      - consul-wells-store-data:/consul/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 64M

  # RabbitMQ
  # RabbitMQ
  rabbitmq-wells-store:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-wells-store
    ports:
      - "5672:5672"
      - "5671:5671"
      - "4369:4369"
      - "15672:15672"
      - "15671:15671"
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: wellsstore
      RABBITMQ_DEFAULT_PASS: wellsstore
    volumes:
      - rabbitmq-wells-store-data:/var/lib/rabbitmq
      - rabbitmq-wells-store-log:/var/log/rabbitmq
    networks:
      - wells-store-rabbitmq-net
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Zipkin
  zipkin-wells-store:
    image: openzipkin/zipkin
    container_name: zipkin-wells-store
    ports:
      - "9410:9410"
      - "9411:9411"
    depends_on:
      rabbitmq-wells-store:
        condition: service_healthy
    networks:
      - wells-store-app-net

networks:
  wells-pagamento-db-net:
  wells-usuario-db-net:
  consul-wells-store-net:
  wells-store-rabbitmq-net:
  wells-store-app-net:

volumes:
  wells-pagamento-db-data:
  wells-usuario-db-data:
  consul-wells-store-data:
  rabbitmq-wells-store-data:
  rabbitmq-wells-store-log: